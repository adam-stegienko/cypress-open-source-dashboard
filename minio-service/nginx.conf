# minio.conf

events {}

http {

  upstream records {
    server storage:9090;
  }

  upstream bucket {
    server storage:9000;
  }

  server {
    server_name          records.local;

    if ($host != "records.local") {
      return 404;
    }

    add_header Access-Control-Request-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    allow all;

    location / {
      proxy_pass http://records;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/records-cypress.crt;
    ssl_certificate_key /etc/ssl/private/records-cypress.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    client_max_body_size 128M;

  }

  server {

    if ($host = "records.local") {
        return 301 https://$host$request_uri;
    }

    server_name            records.local;
    listen 80;
    return 404;

  }

  server {
    server_name minio.local;

    if ($host != "minio.local") {
      return 404;
    }

    add_header Access-Control-Request-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    allow all;

    location / {
      proxy_pass http://bucket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/bucket-cypress.crt;
    ssl_certificate_key /etc/ssl/private/bucket-cypress.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    client_max_body_size 128M;

  }

  server {

    if ($host = "minio.local") {
        return 301 https://$host$request_uri;
    }

    server_name            minio.local;
    listen 80;
    return 404;

  }
}
