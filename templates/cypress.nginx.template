# cypress.conf

events {}

http {

  upstream dashboard {
    server dashboard:8080;
  }

  upstream api {
    server api:4000;
  }

  upstream director {
    server director:1234;
  }

  server {
    server_name          $DASHBOARD_SERVICE_DOMAIN;

    if ($host != "$DASHBOARD_SERVICE_DOMAIN") {
      return 404;
    }

    add_header Access-Control-Request-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    allow all;

    location / {

      proxy_pass         http://dashboard;
      proxy_redirect     off;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    }

    location ~ .*api$ {
      
      proxy_pass         http://api;
      proxy_redirect     off;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    }

    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/$DASHBOARD_CRT;
    ssl_certificate_key /etc/ssl/private/$DASHBOARD_KEY;
    ssl_protocols TLSv1.2 TLSv1.3;
    client_max_body_size 128M;

  }


  server {
    if ($host = $DASHBOARD_SERVICE_DOMAIN) {
        return 301 https://$host$request_uri;
    }

    server_name           $DASHBOARD_SERVICE_DOMAIN;
    listen 80;
    return 404;

  }

  server {
    server_name          $DIRECTOR_SERVICE_DOMAIN;

    if ($host != "$DIRECTOR_SERVICE_DOMAIN") {
      return 404;
    }

    add_header Access-Control-Request-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, HEAD, PATCH";
    allow all;

    location / {

      proxy_pass         http://director;
      proxy_redirect     off;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    }

    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/$DIRECTOR_CRT;
    ssl_certificate_key /etc/ssl/private/$DIRECTOR_KEY;
    ssl_protocols TLSv1.2 TLSv1.3;
    client_max_body_size 128M;

  }


  server {
    if ($host = $DIRECTOR_SERVICE_DOMAIN) {
        return 301 https://$host$request_uri;
    }

    server_name          $DIRECTOR_SERVICE_DOMAIN;
    listen 80;
    return 404;

  }
}
